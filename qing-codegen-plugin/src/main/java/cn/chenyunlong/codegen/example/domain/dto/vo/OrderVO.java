// Auto Generated by Qing Code Generator
// Do not modify this file manually
// Generated at: 2025-08-22T03:43:26.952556900

package cn.chenyunlong.codegen.example.domain.dto.vo;

import cn.chenyunlong.codegen.example.domain.Order;
import cn.chenyunlong.common.model.AbstractBaseJpaVo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import lombok.AccessLevel;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

/**
 * Order视图对象
 *
 * @author 代码生成器
 * @since 2025-08-22 04:07:12
 */
@Schema(
        name = "OrderVO",
        description = "Order视图对象"
)
@Data
@EqualsAndHashCode(
        callSuper = true
)
@NoArgsConstructor(
        access = AccessLevel.PROTECTED
)
public class OrderVO extends AbstractBaseJpaVo {
    @Schema(
            description = "orderNumber"
    )
    private String orderNumber;

    @Schema(
            description = "customerId"
    )
    private Long customerId;

    @Schema(
            description = "customerName"
    )
    private String customerName;

    @Schema(
            description = "status"
    )
    private Order.OrderStatus status;

    @Schema(
            description = "totalAmount"
    )
    private BigDecimal totalAmount;

    @Schema(
            description = "discountAmount"
    )
    private BigDecimal discountAmount;

    @Schema(
            description = "paidAmount"
    )
    private BigDecimal paidAmount;

    @Schema(
            description = "shippingAddress"
    )
    private String shippingAddress;

    @Schema(
            description = "shippingPhone"
    )
    private String shippingPhone;

    @Schema(
            description = "remark"
    )
    private String remark;

    @Schema(
            description = "orderTime"
    )
    private LocalDateTime orderTime;

    @Schema(
            description = "confirmTime"
    )
    private LocalDateTime confirmTime;

    @Schema(
            description = "shipTime"
    )
    private LocalDateTime shipTime;

    @Schema(
            description = "deliveryTime"
    )
    private LocalDateTime deliveryTime;

    @Schema(
            description = "orderType"
    )
    private Order.OrderType orderType;

    @Schema(
            description = "paymentMethod"
    )
    private Order.PaymentMethod paymentMethod;

    @Schema(
            description = "needInvoice"
    )
    private Boolean needInvoice;

    @Schema(
            description = "invoiceTitle"
    )
    private String invoiceTitle;

    @Schema(
            description = "taxNumber"
    )
    private String taxNumber;

    @Schema(
            description = "source"
    )
    private Order.OrderSource source;

    public OrderVO(Order source) {
        super();
        this.setId(source.getId().getId());;
        this.setCreatedAt(source.getCreatedAt());;
        this.setUpdatedAt(source.getCreatedAt());;
        this.setVersion(source.getVersion());;
        this.setOrderNumber(source.getOrderNumber());
        this.setCustomerId(source.getCustomerId());
        this.setCustomerName(source.getCustomerName());
        this.setStatus(source.getStatus());
        this.setTotalAmount(source.getTotalAmount());
        this.setDiscountAmount(source.getDiscountAmount());
        this.setPaidAmount(source.getPaidAmount());
        this.setShippingAddress(source.getShippingAddress());
        this.setShippingPhone(source.getShippingPhone());
        this.setRemark(source.getRemark());
        this.setOrderTime(source.getOrderTime());
        this.setConfirmTime(source.getConfirmTime());
        this.setShipTime(source.getShipTime());
        this.setDeliveryTime(source.getDeliveryTime());
        this.setOrderType(source.getOrderType());
        this.setPaymentMethod(source.getPaymentMethod());
        this.setNeedInvoice(source.getNeedInvoice());
        this.setInvoiceTitle(source.getInvoiceTitle());
        this.setTaxNumber(source.getTaxNumber());
        this.setSource(source.getSource());
    }
}
