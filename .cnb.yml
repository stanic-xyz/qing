main-cnb:
  auto_tag: # 事件名
    - stages:
        - name: auto tag
          image: "cnbcool/git-auto-tag:latest"
          settings:
            tagFormat: 'release.\${version}'
            branch: $CNB_BRANCH
            repoUrlHttps: $CNB_REPO_URL_HTTPS
          exports:
            tag: NEW_TAG
        - name: show tag
          script: echo $NEW_TAG
  push:
    - docker:
        # 声明式的构建环境 https://docs.cnb.cool/
        # 可以去dockerhub上 https://hub.docker.com/_/maven 找到您需要maven和jdk版本
        image: maven:3.9.9-amazoncorretto-21
        volumes:
          # 声明式的构建缓存 https://docs.cnb.cool/zh/grammar/pipeline.html#volumes
          - /root/.m2:copy-on-write
      services:
        # 流水线中启用 docker 服务
        - docker
      stages:
        - name: Anime服务打包
          script:
            # 合并./settings.xml和/root/.m2/settings.xml
            - mvn clean package -pl qing-services/qing-service-auth/auth-interfaces -am -f pom.xml
        #        # 云原生构建自动构建Docker镜像并将它发布到制品库，【上传Docker制品】https://docs.cnb.cool/zh/artifact/docker.html
        - name: echo tag name
          script:
            - echo  $CNB_BRANCH
            - docker info
            - echo docker info ${CNB_DOCKER_REGISTRY}


        - name: docker login
          script:
            - docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build
          script:
            - docker build -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT} ${CNB_BUILD_WORKSPACE}/qing-services/qing-service-auth/auth-interfaces/
        - name: docker push
          script:
            - docker push ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_COMMIT}


# 对指定 tag 生效
release.*.*.*:
  tag_push:
    - stages:
        - name: echo tag name
          script: echo  $CNB_BRANCH

# 对所有 tag 生效
$:
  tag_push:
    - docker:
        image: alpine/helm
    - stages:
        - name: echo final tag name
          script: echo $CNB_BRANCH

        - name: helm login
          script: helm registry login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_HELM_REGISTRY}
        - name: helm package
          script: helm package ${CNB_REPO_NAME}
        - name: helm push
          script: helm push qing-0.1.0.tgz oci://${CNB_HELM_REGISTRY}/${CNB_GROUP_SLUG_LOWERCASE}
