# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Deploy VitePress site to Pages

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [ main ]
    paths:
      - "docs/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - ".github/workflows/deploy-vitepress.yml"

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

env:
  # 启用 pnpm 缓存
  PNPM_CACHE_FOLDER: .pnpm
  # 设置 Node.js 内存限制
  NODE_OPTIONS: --max-old-space-size=4096

jobs:
  # 检测文档变更
  detect-changes:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    outputs:
      docs-changed: ${{ steps.changes.outputs.docs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docs:
              - 'docs/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - '.github/workflows/deploy-vitepress.yml'

  # 构建工作
  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.docs-changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: blacksmith-4vcpu-ubuntu-2404
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # 浅克隆节省时间，除非需要 lastUpdated
      
      - name: Setup Node
        uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: 'pnpm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9.6.0
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      
      - name: Build with VitePress
        run: pnpm docs:build
        env:
          NODE_ENV: production
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: blacksmith-4vcpu-ubuntu-2404
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
