<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019-2023  YunLong Chen
  ~ Project Qing is licensed under Mulan PSL v2.
  ~ You can use this software according to the terms and conditions of the Mulan PSL v2.
  ~ You may obtain a copy of Mulan PSL v2 at:
  ~          https://license.coscl.org.cn/MulanPSL2
  ~ THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
  ~ EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
  ~ MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
  ~ See the Mulan PSL v2 for more details.
  ~
  -->

<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    简化的Checkstyle配置，只检查Java语言特有的规则，格式化交给EditorConfig处理

    保留的检查类型：
    - 命名约定（包名、类名、方法名、变量名等）
    - 代码质量（空catch块、finalizer等）
    - Java语言规范（一个文件一个顶级类、switch default等）
    - 注释规范（Javadoc相关）

    移除的检查类型：
    - 所有空格、缩进、换行相关的格式化检查
    - 大括号位置检查
    - 行长度检查
 -->

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- 排除module-info.java文件 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>
    <!-- 排除测试文件 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value=".*[\\/]src[\\/]test[\\/].*$"/>
    </module>
    <!-- 排除生成的源码 -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value=".*[\\/]target[\\/]generated-sources[\\/].*$"/>
    </module>

    <!-- 抑制过滤器 -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.google.suppressionfilter.config}"
                  default="checkstyle-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>

    <module name="TreeWalker">
        <module name="SuppressionCommentFilter"/>

        <!-- ========== Java语言规范检查 ========== -->

        <!-- 一个文件只能有一个顶级类 -->
        <module name="OuterTypeFilename"/>
        <module name="OneTopLevelClass"/>

        <!-- 非法字符检查 -->
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format"
                      value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message"
                      value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
        </module>

        <!-- 避免转义的Unicode字符 -->
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>

        <!-- 需要大括号 -->
        <module name="NeedBraces">
            <property name="tokens"
                      value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>

        <!-- 数组类型风格 -->
        <module name="ArrayTypeStyle"/>

        <!-- Switch语句必须有default -->
        <module name="MissingSwitchDefault"/>

        <!-- Fall through检查 -->
        <module name="FallThrough"/>

        <!-- 长整型字面量必须使用大写L -->
        <module name="UpperEll"/>

        <!-- 修饰符顺序 -->
        <module name="ModifierOrder"/>

        <!-- 一行一个语句 -->
        <module name="OneStatementPerLine"/>

        <!-- 多变量声明 -->
        <module name="MultipleVariableDeclarations"/>

        <!-- ========== 命名约定检查 ========== -->

        <!-- 包名检查 -->
        <module name="PackageName">
            <property name="format" value="^cn\.chenyunlong(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 成员变量名检查 -->
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 参数名检查 -->
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- Catch参数名检查 -->
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 局部变量名检查 -->
        <module name="LocalVariableName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 模式变量名检查 -->
        <module name="PatternVariableName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern"
                     value="Pattern variable name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 类型参数名检查 -->
        <module name="ClassTypeParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="(^[A-Z]+)$|(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="RecordTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
                     value="Record type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z]+$"/>
            <message key="name.invalidPattern"
                     value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z]+)$"/>
            <message key="name.invalidPattern"
                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- 方法名检查 -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
                     value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- ========== 代码质量检查 ========== -->

        <!-- 禁止使用finalizer -->
        <module name="NoFinalizer"/>

        <!-- 缩写作为单词处理 -->
        <module name="AbbreviationAsWordInName">
            <property name="severity" value="warning"/>
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="3"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                    PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF,
                    RECORD_COMPONENT_DEF"/>
        </module>

        <!-- 重载方法声明顺序 -->
        <module name="OverloadMethodsDeclarationOrder"/>

        <!-- 变量声明使用距离 -->
        <module name="VariableDeclarationUsageDistance">
            <property name="severity" value="warning"/>
        </module>

        <!-- 空的catch块 -->
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>

        <!-- ========== Javadoc检查 ========== -->

        <!-- 非空的@clause描述 -->
        <module name="NonEmptyAtclauseDescription"/>

        <!-- 无效的Javadoc位置 -->
        <module name="InvalidJavadocPosition"/>

        <!-- 块标签组前需要空行 -->
        <!-- <module name="RequireEmptyLineBeforeBlockTagGroup"/> -->

        <!-- @clause顺序 -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>

        <!-- 单行Javadoc -->
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>

    </module>
</module>
